<< 에리엔진 리워크 사양 >>


  주요 플랫폼

    사용자 인터페이스: VueJS
    데이터 트리뷰: clusterize.js (https://clusterize.js.org/)
    렌더링 엔진: LveJS


프로젝트 UUID

  모든 프로젝트는 UUID를 가지고 있다.
  이는 추후 앱으로 빌드할 때 고유식별인 appId를 UUID을 활용하여 만들도록 한다.

  프로젝트는 생성 시, 폴더 지정을 하도록 한다.
  열때는 폴더를 열도록 한다.


모듈 시스템

  추가/제거가 가능해야한다.
  각 프로젝트 폴더에는 Modules 폴더가 존재하며, 이곳에 각 모듈 폴더가 UUID로 존재한다.


인터페이스
스크립트
디자인
키워드
에셋

  각 에셋은 디렉토리에 분류되어 파일로 저장된다.


인터페이스

  LveJS 객체 자체의 정보를 그대로 json 형식으로 파일에 담는다.

  인터페이스 조작은 외부 스크립트에서 불가능하게 만든다
  유저의 제스쳐  (마우스클릭, 키보드 감지) 등으로만 가능하도록 만듬
  이는 개발자의 오용으로 인해 컴퍼넌트의 상태가 복잡해지는 것을 막기 위함


액터

  액터의 특정 부분 (얼굴, 가슴, 다리) 등을 유저가 직접 지정할 수 있게 한다.
  이는 스크립트에서 특정 부분 확대 기능을 쓰기 위함이다.


저장

  저장은 파일 단위로 저장하여 프로젝트 폴더에 저장되며,
  파일을 수정하기 위해 열였을 경우, 임시 폴더에 저장한다. 이는 저장할 때 삭제된다.
  
  확장자와 내용물은 아래와 같다.

  Game (esg)
    UUID
    Name
    Version,
    Developer

  Asset (esa)
    UUID
    MIME

  Script (ess)
    UUID
    Comment
    Events []
    Conditions []
    Actions []
    Next []

  Design (esd)
    UUID
    AssetId

  Interface (esi)
    UUID
    DesignId
    Style {
      x
      y
      z
      scale
    }
  

삭제

  모든 데이터는 파일 단위로 저장하며, 파일삭제시 영구 삭제가 아니라, 휴지통으로 이동된다.
  이는 사용자가 파일을 잘못 삭제하더라도 직접 복구할 수 있게 도움을 준다.


저장/디렉토리 구조

  디렉토리에 모듈 디렉토리가 존재할 경우, 디렉토리 내부의 내용을 재귀함수를 이용하여 불러들인다.

  프로젝트 디렉토리 (UUID)
    Save
      기본 디렉토리 (UUID, 프로젝트 디렉토리명과 같다)
        Assets
          ...에셋 파일들
        Designs
          ...디자인 파일들 (esdesign)
        Interfaces
          ...인터페이스 파일들 (esinterface)
        Scripts
          ...스크립트 파일들 (esscript)
        프로젝트정보.esproject

      모듈 디렉토리
        기본 디렉토리 (UUID)
          Assets
            ...에셋 파일들
    Backup
      ...[ package_${timestamp}.esp ]


백업

  단일 파일 형식으로 데이터를 관리하기 때문에 백업을 지원하지 않는다.


데이터 선택

  스크립트 작성 시, 아이템 목록을 보여주는 방식은 TreeView 방식으로 보여주도록 한다.
  TreeView 에서 아이템 선택 시, 아이템 이름이 아닌 UUID가 선택된다.


TreeView

  데이터의 TreeView는 경로를 정할 수 있다.

  TreeView 에서는 디렉토리/파일 생성 버튼을 지원해야 한다.
  이는 현재 TreeView 에서 선택한 디렉토리를 기점으로 새로이 추가된다. 선택되지 않았다면 루트 디렉토리로 선택된다.
  아이템은 우클릭 - 컨텍스트메뉴에서 삭제할 수 있으며, Shift, Ctrl 등의 보조 기능을 이용하여 다수 선택할 수 있어야 한다.
  파일 및 디렉토리는 이름의 오름차순으로 정렬된다.


모달

  Electron 내부모듈인 Menu, MenuItem 등을 이용하여 메뉴와 컨텍스트 메뉴를 구성한다.
  새창은 더 이상 jQuery UI 를 사용하지 않고, BrowserWindow 의 modal: true 속성을 이용한다.


디자인

  jQuery UI 를 사용하지 않음에 따라, 에리엔진 리워크에서 공통적으로 사용될 템플릿을 추가한다.
  디렉토리 구조는 Vue.js의 TreeView 기능을 이용한다.


데이터관리

  모든 데이터는 Vue.js를 이용하여 Kernel 에서 관리한다.
  이는 각 모달 간 데이터 관리를 좀 더 수월하게 할 수 있게 도와줄 것이다.
  모달간 데이터 관리는 Electron.IPC를 이용하여 비동기 통신을 사용한다.


스크립트
  
  기존 스크립트에선 특정 단어를 치환하는 과정이 까다로웠다.
  때문에 키워드 기능을 이용하여 해결했는데, 키워드 기능은 더이상 이용하지 않는다.
  모든 텍스트 입력은 직접 입력하는 방식으로 해결하지만, 대신 옆에서 언어를 추가/지정할 수 있다.


다국어 지원

  기존의 키워드 개념을 삭제하고, 모든 데이터를 개발자가 수동으로 입력한다.
  입력 과정에서 사이드 탭에 언어를 선택/입력 가능하며, 다중 언어를 지원할 수 있도록 한다.


환경설정


튜토리얼



=== 인게임 ===


음악
  배경음
    : 배경음은 세이브된 시점에 재생되던 곡을 로드하면 처음부터 재생합니다
  효과음
    : 효과음은 세이브되지 않습니다

화면
  시스템화면 열기/닫기

비디오
  비디오 재생/중지/볼륨

메인색상
  게임에서 주로 사용하는 메인 색상이 있어야 합니다
  이는 프로젝트 생성 시 결정할 수 있어야 합니다




변수
  일반 변수
    전역변수
      : 모든 스크립트에서 접근할 수 있습니다
    지역변수
      : 선언 이후에 스트림으로 연결된 스크립트에서만 접근할 수 있습니다
  환경변수
    : 모든 스크립트에서 접근할 수 있으며, 해당 프로젝트의 모든 세이브 파일이 동일한 값을 공유합니다

텍스트 입력
  다국어 지원
    : 다국어를 지원할 수 있어야 합니다. 텍스트를 입력하는 공간에 + 표시로 '새로운 언어' 탭을 만들고, 입력할 수 있어야 합니다.

대사
  대사창/이름창
    : 대사창과 이름창을 지정할 수 있어야 합니다
  

스크립트 매크로
  : 모든 매크로는 즉시 동적으로 실행되어야 합니다.

  매크로 종류

    사건
      대사
        : 대사가 시작되었을 때
        : 대사가 타이핑 될 때 마다
        : 대사가 종료되었을 때

      선택지
        : 선택지를 선택했을 때

      사운드
        : 사운드가 재생되었을 때
        : 사운드가 중지되었을 때
        : 사운드가 종료되었을 때

      비디오
        : 비디오가 재생되었을 때
        : 비디오가 중지되었을 때
        : 비디오가 종료되었을 때

      물체
        : 물체를 좌클릭하면
        : 물체를 우클릭하면

      마우스
        : 좌클릭하면
        : 우클릭하면

      키보드
        : 키를 누르면
        : 키를 때면



    조건
      대사
        : 대사 종류가 대사/독백일 경우

      선택지
        : 선택지 이름이 X일 경우

      사운드
        : 사운드가 배경음/효과음일 경우
        : 사운드 이름이 X일 경우

      비디오
        : 비디오의 이름이 X일 경우

      물체
        : 물체의 이름이 X일 경우

      키보드
        : 키가 X일 경우


    액션
      대사
        : 대사 출력
        : 독백 출력
          : 상위 2개는 음성 기능을 지원해야 합니다
        : 이름창 지정
        : 대사창 지정
        : 대사 자동/수동 재생
        : 대사 출력 속도 지정
        : 대사 넘기기
        : 대사 타이핑 스킵

      화면
        : 페이드인/페이드 아웃
        : 장소 이동
        : 시스템 화면 열기
        : 인터페이스 숨기기

      사운드
        : 사운드 재생
        : 사운드 일시/중지
          : 상위 2개는 배경음/효과음 타입을 지원해야 합니다
          : 상위 2개는 페이드 기능을 지원해야 합니다
        : 사운드 재생속도 설정

      선택지
        : 선택지를 추가합니다

      캐릭터
        : 캐릭터 등장
        : 캐릭터 퇴장
          : 이미 생성되었다면 그대로 옮겨오고, 없다면 새로 생성합니다
          : 페이드 기능을 지원해야 합니다
        : 캐릭터 확대 (머리/가슴/배 등, 위치 지정이 가능해야함)
        : 캐릭터 이미지 변경
          : 확대 상태에서 이미지가 변경되더라도, 자동으로 위치를 추적하면 안됩니다
          : 페이드 및 애니메이션 효과를 지원해야 합니다

      제어
        : 잠시 기다립니다


스크립트 매크로 변수 종류

  텍스트(text)
    : 다국어를 입력할 수 있어야 합니다.
    : 변수를 입력할 수 있어야 합니다.

  액터(actor)
    : 파일처럼 생성한 액터를 선택할 수 있어야 합니다.
    : 액터의 이름의 다국어 지원은 액터 디자인에서 설정합니다.
    : 다국어를 묶어서 표현할 수 있습니다.

  피저(figure)
    : 다국어와 관련없이 전세계에서 통용되는 단어를 표현합니다. (숫자 등)
    : 변수를 입력할 수 있어야 합니다.

  파일(file)
    : 파일을 선택할 수 있어야 합니다.
    : 필터로 파일 확장자를 걸러낼 수 있어야 합니다. ['jpeg', 'jpg', 'png', ...]